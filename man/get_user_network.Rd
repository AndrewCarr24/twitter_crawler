% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_user_network.R
\name{get_user_network}
\alias{get_user_network}
\title{Takes Twitter user information and returns list of data on users in network connections and an edgelist of user's network.}
\usage{
get_user_network(
  screen_name = NULL,
  id = NULL,
  degree = 1,
  token = NULL,
  filter_col = NULL,
  filter_val = NULL,
  filter_logic = "any",
  greater = TRUE,
  ...
)
}
\arguments{
\item{screen_name}{Twitter user screen name.}

\item{id}{Twitter user id.}

\item{degree}{Number of degrees of user's friends/followers to collect.}

\item{token}{Twitter API token.}

\item{filter_col}{Name of column of user tibble to filter for Twitter user collection (optional).}

\item{filter_val}{Value to filter on (optional).}

\item{filter_logic}{For multiple filters, determines whether to filter based on "any" or "all" criteria (optional).}

\item{greater}{When filtering number of friends/followers, determines whether filter is ceiling or floor on number of users (optional).}

\item{...}{Additional arguments used for recursive function call within function.}
}
\value{
List with two elements: user tibble and edgelist tibble.
}
\description{
Takes Twitter user information and returns list of data on users in network connections and an edgelist of user's network.
}
\examples{
\dontrun{
ex_id <- 778619636510326784 # Example Twitter user id
ex_degree <- 2 # Collect user's friends and their friends' friends
ex_token <- api_token # Returned from api_credentials_to_token function
get_user_network(id = ex_id, degree = ex_degree, token = ex_token)
}
}
